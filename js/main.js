import { showNotification } from './utils.js';

/* === Portfolio Cards === */
const projects = [
  { img: './images/portfolio1.jpg', title: '–≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –Ω–∞ –ø–ª–∞—Ç–æ –ü—É—Ç–æ—Ä–∞–Ω–∞' },
  { img: './images/portfolio2.jpg', title: '–¢—Ä–µ–∫–∫–∏–Ω–≥ –ø–æ –≥–æ—Ä–∞–º –ê–ª—Ç–∞—è' },
  { img: './images/portfolio3.jpg', title: '–í—É–ª–∫–∞–Ω—ã –ö–∞–º—á–∞—Ç–∫–∏' }
];

document.addEventListener('DOMContentLoaded', () => {
  const portfolioGrid = document.getElementById('portfolio-grid');
  if (portfolioGrid) {
    projects.forEach(project => {
      const card = document.createElement('div');
      card.className = 'project-card';
      card.innerHTML = `<img src="${project.img}" alt="${project.title}"><p>${project.title}</p>`;
      portfolioGrid.appendChild(card);
    });
  }

  /* === Modal Logic === */
  const contactBtn = document.getElementById('contact-btn');
  const modal = document.getElementById('contact-modal');
  const closeBtn = document.querySelector('.close');

  if (contactBtn && modal && closeBtn) {
    contactBtn.addEventListener('click', e => {
      e.preventDefault();
      modal.style.display = 'block';
    });
    closeBtn.addEventListener('click', () => modal.style.display = 'none');
    window.addEventListener('click', e => {
      if (e.target === modal) modal.style.display = 'none';
    });
  }

  /* === Telegram –æ—Ç–ø—Ä–∞–≤–∫–∞ === */
  const form = document.querySelector('#contact-form');
  if (form) {
    const TOKEN = '7381394108:AAHx4Ixp9fCxvNhIwvB0Rh8BPgFrzcUU8nk';
    const CHAT_ID = '5019049081';
    const URL_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

    form.addEventListener('submit', function (e) {
      e.preventDefault();

      const name = form.querySelector('[name="name"]')?.value.trim();
      const email = form.querySelector('[name="email"]')?.value.trim();
      const message = form.querySelector('[name="message"]')?.value.trim();

      if (!name || !email || !message) {
        showNotification('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', true);
        return;
      }

      const text = `
üì© <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ Travelit!</b>\n
üë§ <b>–ò–º—è:</b> ${name}\n
üìß <b>Email:</b> ${email}\n
üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${message}
      `;

      fetch(URL_API, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: text,
          parse_mode: 'HTML'
        })
      }).then(res => {
        if (res.ok) {
          showNotification('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
          form.reset();
        } else {
          showNotification('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', true);
        }
      }).catch(() => {
        showNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API!', true);
      });
    });
  }
});

/*–∫–∞—Ä—Ç–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π*/ 
const mapImage = document.querySelector('.map-container');
const mapInfo = document.getElementById('info-box');

// –î–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–∫: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ
const markersData = [
  {
    name: '–ö–∞—Ä–µ–ª–∏—è',
    x: 27,
    y: 33,
    description: '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ –ª–µ—Å–∞ –∏ –æ–∑—ë—Ä–∞ –ö–∞—Ä–µ–ª–∏–∏...',
    video: './videos/video-karelia.mp4'
  },
  {
    name: '–ö–∞–º—á–∞—Ç–∫–∞',
    x: 85,
    y: 30,
    description: '–í—É–ª–∫–∞–Ω—ã –ö–∞–º—á–∞—Ç–∫–∏ –∂–¥—É—Ç —Ç–µ–±—è!',
    video: './videos/video-kamchatka.mp4'
  },
  {
    name: '–ë–∞–π–∫–∞–ª',
    x: 67,
    y: 72,
    description: '–ì–ª—É–±–æ—á–∞–π—à–µ–µ –æ–∑–µ—Ä–æ –ø–ª–∞–Ω–µ—Ç—ã...',
    video: './videos/video-card-baikal.mp4'
  },
  {
    name: '–ê–ª—Ç–∞–π',
    x: 49,
    y: 77,
    description: '–ì–æ—Ä–Ω—ã–µ —Ö—Ä–µ–±—Ç—ã –∏ –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–æ–ª–∏–Ω—ã...',
    video: './videos/video-altay.mp4'
  },
  {
    name: '–ß—É–∫–æ—Ç–∫–∞',
    x: 76,
    y: 18,
    description: '–ö—Ä–∞–π –≤–µ—á–Ω–æ–π –º–µ—Ä–∑–ª–æ—Ç—ã –∏ —Å–µ–≤–µ—Ä–Ω–æ–≥–æ —Å–∏—è–Ω–∏—è...',
    video: './videos/video-chukotka.mp4'
  }
];

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ç–æ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ
markersData.forEach(marker => {
  const el = document.createElement('img');
  el.src = './images/map-pin.png';
  el.className = 'map-pin';
  el.style.left = marker.x + '%';
  el.style.top = marker.y + '%';

  el.addEventListener('click', (event) => {
    // –í—Å—Ç–∞–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
    mapInfo.innerHTML = `
      <div class="card description-card">
        <h3>${marker.name}</h3>
        <p>${marker.description}</p>
      </div>
      <div class="card video-card">
        <video autoplay muted loop playsinline controls>
          <source src="${marker.video}" type="video/mp4">
          –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
        </video>
      </div>
    `;

    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –±–ª–æ–∫ —Ä—è–¥–æ–º —Å –º–µ—Ç–∫–æ–π
    const rect = el.getBoundingClientRect();
    const containerRect = mapImage.getBoundingClientRect();

    const top = rect.top - containerRect.top + el.offsetHeight + 10;
    const left = rect.left - containerRect.left;

    mapInfo.style.top = `${top}px`;
    mapInfo.style.left = `${left}px`;

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    mapInfo.classList.add('active');
  });

  mapImage.appendChild(el);
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ
document.addEventListener('click', (e) => {
  const isClickOnPin = e.target.classList.contains('map-pin');
  const isInsideInfoBox = e.target.closest('#info-box');

  if (!isClickOnPin && !isInsideInfoBox) {
    mapInfo.classList.remove('active');
    mapInfo.innerHTML = '';
  }
});

  